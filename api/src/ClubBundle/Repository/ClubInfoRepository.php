<?php

namespace ClubBundle\Repository;

/**
 * ClubInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClubInfoRepository extends \Doctrine\ORM\EntityRepository
{


    public function findLastClub($limit = 3)
    {

        $sql = "select club ";
        $from = " from ClubBundle\Entity\ClubInfo as club,";
        $where = " where club.status =1 and";

        $where = substr($where, 0, -4);
        $from = substr($from, 0, -1);
        $query = $sql . $from . $where . " order BY club.dateAdd DESC ";
        $qb = $this->getEntityManager()->createQuery($query)
                   ->setMaxResults(3);
        return $qb->getResult() ;

    }

    public function filterClub($search_filter,$itemsPerPage, $pagenumber)
    {

        if (isset($search_filter)) {

            $sql = "select club from ClubBundle\Entity\ClubInfo as club where club.clubName LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.phone LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.emailOfThePersonContacted LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.firstNameResponsible LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.lastNameResponsible LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.idPackage in (select packages.id from CommunBundle\Entity\ListPackage as packages where packages.name LIKE '%" . $search_filter . "%' ) ";

        }
        else
        {

            $sql = "select club from ClubBundle\Entity\ClubInfo as club ";
        }
        $query = $sql   . "  ";

        $qb = $this->getEntityManager()->createQuery($query)
            // On définit l'annonce à partir de laquelle commencer la liste
            ->setFirstResult(($pagenumber-1) * $itemsPerPage)
            // Ainsi que le nombre d'annonce à afficher sur une page
            ->setMaxResults($itemsPerPage);
        //echo $qb->getSQL(); exit;
        return $qb->getResult();
    }


    public function TotalClub($search_filter)
    {

        if (isset($search_filter)) {

            $sql = "select club from ClubBundle\Entity\ClubInfo as club where club.clubName LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.phone LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.emailOfThePersonContacted LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.firstNameResponsible LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.lastNameResponsible LIKE '%" . $search_filter . "%' or ";
            $sql .= " club.idPackage in (select packages.id from CommunBundle\Entity\ListPackage as packages where packages.name LIKE '%" . $search_filter . "%' ) ";

        }
        else
        {
            $sql = "select club from ClubBundle\Entity\ClubInfo as club ";
        }
        $query = $sql   . "  ";

        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL(); exit;
        return count($qb->getResult());

    }
    
    public function findTopRated(array $args = null)
    {
        $query = $this->createQueryBuilder('CI')
                ->where('CI.presentation4 IS NOT NULL');
        
        // order by
        if (array_key_exists('orderby', $args) && $args['orderby'])
        {
            if (array_key_exists('moyReviews', $args['orderby']))
            {
                $order = ($args['orderby']['moyReviews']) ? $args['orderby']['moyReviews'] : 'ASC';
                $query = $query->orderBy('CI.moyReviews', $order);
            }
        }
        
        // limit
        if (array_key_exists('limit', $args))
        {
            $query = $query->setMaxResults($args['limit']);
        }
        
        return $query->getQuery()->getResult();
    }
}
