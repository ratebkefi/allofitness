<?php

namespace CoachBundle\Repository;

/**
 * CoachCourseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CoachCourseRepository extends \Doctrine\ORM\EntityRepository
{



    public function filterCourseCoach($idCoach,$itemsPerPage, $pagenumber)
    {

        $sql = "select course from CoachBundle\Entity\CoachCourse as course where course.idCoach = '" . $idCoach . "' and course.status=1 ";
        $query = $sql;
        $qb = $this->getEntityManager()->createQuery($query)
            // On définit l'annonce à partir de laquelle commencer la liste
            ->setFirstResult(($pagenumber-1) * $itemsPerPage)
            // Ainsi que le nombre d'annonce à afficher sur une page
            ->setMaxResults($itemsPerPage);
        //echo $qb->getSQL(); exit;
        return $qb->getResult();
    }


    public function TotalCourseCoach($idCoach)
    {
        $sql = "select course from CoachBundle\Entity\CoachCourse as course where course.idCoach = '" . $idCoach . "' and course.status=1 ";
        $query = $sql;
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL(); exit;
        return count($qb->getResult());
    }




    public function filterCourse($itemsPerPage, $pagenumber)
    {

        $sql = "select course from CoachBundle\Entity\CoachCourse as course where course.status=1 ";
        $query = $sql;
        $qb = $this->getEntityManager()->createQuery($query)
            // On définit l'annonce à partir de laquelle commencer la liste
            ->setFirstResult(($pagenumber-1) * $itemsPerPage)
            // Ainsi que le nombre d'annonce à afficher sur une page
            ->setMaxResults($itemsPerPage);
        //echo $qb->getSQL(); exit;
        return $qb->getResult();
    }


    public function TotalCourse()
    {
        $sql = "select course from CoachBundle\Entity\CoachCourse as course where course.status=1 ";
        $query = $sql;
        $qb = $this->getEntityManager()->createQuery($query);
        //echo $qb->getSQL(); exit;
        return count($qb->getResult());
    }





}
